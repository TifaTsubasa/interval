'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/interval/docs/ch01/tc01/01/','title':"1st",'content':"计算机网络 TCP的握手过程？为什么进行三次握手，四次挥手 了解更多\nHTTPS的握手过程  建立服务器443端口连接 SSL握手：证书，随机密钥，加密算法 发送加密请求 发送加密响应 关闭SSL 关闭TCP  什么是中间人攻击？怎么预防？  中间人把自己的公钥给到客户端，之后用自己的私钥解开客户端数据，再用后台的公钥加密数据，发给后台。这样中间人能拿到双端的数据。 一般禁止接入代理和在代码内比对证书。  charles抓包过程？不使用charles，4G网络如何抓包  运行charles，手机配置代理。如果是http协议，charles能看到所有的请求和返回数据。如果要看到https的数据，需要在手机上安装charles证书，并信任证书。 4G网络，如果是安卓设备，用Packet Capture、tshark或者tcpdump。如果是iOS设备，用Fiddler、tcpdump和wireshark。  "});index.add({'id':1,'href':'/interval/docs/ch01/tc02/02/','title':"2nd",'content':"操作系统 进程和线程的区别  根本区别：进程是操作系统资源分配的基本单位，线程是任务调度和执行的基本单位； 在开销方面：每个进程都有独立的代码和数据空间，程序之间的切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每个线程都有自己独立的运行栈和程序计数器，线程之间切换的开销小。 所处环境：在操作系统中能同时运行多个进程；而在同一个进程中有多个线程同时执行，通过CPU调度，在每个时间片中只有一个线程执行 内存分配方面：系统在运行的时候会为每个进程分配不同的内存空间；而对线程而言，除了CPU外，系统不会为线程分配内存，线程所使用的资源来自其所属进程的资源，线程组之间只能共享资源。 包含关系：没有线程的进程可以看做是单线程的，如果一个进程内有多个线程，则执行过程不是一条线的，而是多条线共同完成的；线程是进程的一部分，所以线程也被称为轻量级进程。  堆和栈区的区别？谁的占用内存空间大  栈内存存储的是局部变量，而堆内存是实体； 栈内存的更新速度高于堆内存； 栈内存的生命周期一结束就会被释放，而堆内存会被垃圾回收机制不定时回收。 堆是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大。  "});index.add({'id':2,'href':'/interval/docs/ch01/tc03/03/','title':"3rd",'content':"数据安全 对称加密算法和非对称加密算法区别 对称加密算法，是用的一个秘钥，进行加密和解密。而非对称加密算法，用的是一对秘钥，包括公钥和私钥，一般用公钥加密，私钥解密。\n常见的对称加密和非对称加密算法有哪些 对称加密有AES、3DES，非对称加密有RSA。\nMD5、Sha1、Sha256区别  MD5值长度是128位（16个字符）、SHA1值长度是160位（20个字符）、SHA256值长度是256位（32个字符）。 MD5，消息摘要算法，一种被广泛使用的密码散列函数，可以产生一个128位长的散列值（hash value），用于确保信息传输完整一致。 Sha1，安全哈希算法，主要适用于数字签名标准里面定义的数字签名算法。对于长度小于2^64位的消息，Sha1会产生一个160位长的消息摘要。 Sha256，哈希值表示大量数据的固定大小的唯一值。数据的少量更改会在哈希值中产生不可预知的大量更改。Sha256 算法的哈希值长度为 256 位。  "});index.add({'id':3,'href':'/interval/docs/ch01/tc04/04/','title':"4th",'content':"苹果证书 苹果使用证书的目的是什么  苹果使用证书，来签名APP，一是防止APP被篡改，二是防止没有苹果签名的APP安装到设备上。  AppStore安装app时的认证流程 当安装时，苹果的认证流程是，\n 苹果用设备系统的本地公钥，验证APP的MD5值的签名。  在上传时，苹果的操作流程是，\n 苹果验证发布证书和 Provisioning Profile 苹果用后台的私钥，给包重新签名  所以，原来的本地私钥签名就没有用了。苹果没有控制包的有效期，就不需要内置 embedded.mobileprovision 。当上传到AppStore后，就跟你的 证书 / Provisioning Profile 都没有关系了。无论它们是否过期或被废除，都不会影响 AppStore 上的安装包。\n开发者怎么在debug模式下把app安装到设备呢  苹果用设备系统的本地公钥，验证 embedded.mobileprovision 的签名，验证开发证书的签名是否正确。 用开发证书的公钥验证APP签名，验证AppID是否对应得上，设备ID是否在ID列表上，权限开关是否跟APP里的Entitlements对应等。  "});index.add({'id':4,'href':'/interval/docs/ch07/tc01/7-1-1/','title':"7 1 1",'content':""});index.add({'id':5,'href':'/interval/docs/ch07/tc02/7-1-2/','title':"7 1 2",'content':""});index.add({'id':6,'href':'/interval/docs/ch07/tc03/7-1-3/','title':"7 1 3",'content':""});index.add({'id':7,'href':'/interval/docs/ch07/tc04/7-1-4/','title':"7 1 4",'content':""});index.add({'id':8,'href':'/interval/docs/ch07/tc05/7-1-5/','title':"7 1 5",'content':""});index.add({'id':9,'href':'/interval/docs/ch07/tc06/7-2-1/','title':"7 2 1",'content':""});index.add({'id':10,'href':'/interval/docs/ch07/tc07/7-2-2/','title':"7 2 2",'content':""});index.add({'id':11,'href':'/interval/docs/ch07/tc08/7-2-3/','title':"7 2 3",'content':""});index.add({'id':12,'href':'/interval/docs/ch07/tc09/7-2-4/','title':"7 2 4",'content':""});index.add({'id':13,'href':'/interval/docs/ch07/tc10/7-2-5/','title':"7 2 5",'content':""});index.add({'id':14,'href':'/interval/readme/','title':"R E a D M E",'content':"iOS 面试题词条库 链接：https://iosgua.com/interval/\n为什么会整理这套面试题？ 其实是在公众号群里，各路朋友的呼声。毕竟关注技术的多数人是为了找到一个好工作，能够进心仪的大厂。所以希望制作一个面试题的词条收集，让大家一起参与编辑。\n很多知识的答案是不断的讨论才能得出结论，且这些结论其实都是具有时效性的，例如 Apple 的 Runtime 特性、Swift 各种语法的优雅写法等，前者会随着 Runtime 仓库的版本迭代而变化，后者则会随着 Swift 语言的版本更替而改变。\n如何参与面试题整理? 可以直接向内容仓库 interval-content 提 Pull Request 进行修改编辑申请。另外一个简单的方法，在每个词条问题页面中的左下角位置，都会有 Edit this page 的按钮，会直接打开 GitHub 编辑页面。如此可以快速发起 PR，当 @冬瓜 或者其他管理员 Review 通过后，方可合入词条。\n适用人群 iOS 方向求职应届生以及考虑机会的 iOS 工程师。\n特别感谢 感谢以下题目来源：\n 阿里、字节：一套高效的 iOS 面试题  另外，也感谢经典的《招聘一个靠谱的 iOS》仓库带来的面试题整理启发。\n贡献者 License 本作品采用 知识署名-非商业性使用-禁止演绎 （BY-NC-ND） 4.0 国际许可协议 进行许可。\n"});index.add({'id':15,'href':'/interval/docs/ch09/tc01/9-1-10/','title':"APP 架构",'content':"题目还原 你的app架构是什么，有什么优缺点、为什么这么做、怎么改进  "});index.add({'id':16,'href':'/interval/docs/ch06/tc02/6-2-4/','title':"ARC",'content':"题目还原 介绍下 ARC 的实现原理。它对 retain \u0026amp; release 做了哪些优化？哪些情况会造成内存泄漏?  "});index.add({'id':17,'href':'/interval/docs/ch04/tc02/4-2-1/','title':"AutoLayout 原理与性能",'content':"题目还原 AutoLayout 原理是怎样的？其性能如何？  "});index.add({'id':18,'href':'/interval/docs/ch06/tc02/6-2-3/','title':"Autoreleasepool",'content':"题目还原 介绍下 Autoreleasepool 的原理，及其使用的数据结构  "});index.add({'id':19,'href':'/interval/categories/','title':"Categories",'content':""});index.add({'id':20,'href':'/interval/docs/ch06/tc01/6-1-5/','title':"category",'content':"题目还原 介绍下category是什么，是如何被加载的。\n说说两个category的load方法的加载顺序，两个category的同名方法的加载顺序。\ncategory \u0026amp; extension的区别，是否能给NSObject添加Extension\n "});index.add({'id':21,'href':'/interval/docs/ch06/tc03/6-3-4/','title':"class, objc_getClass, object_getclass",'content':"题目还原 class、objc_getClass、object_getclass 这几个方法的区别是什么？  "});index.add({'id':22,'href':'/interval/docs/ch06/tc01/6-1-3/','title':"class_copyIvarList \u0026 class_copyPropertyList有什么区别",'content':"题目还原 class_copyIvarList \u0026amp; class_copyPropertyList有什么区别  "});index.add({'id':23,'href':'/interval/docs/ch06/tc01/6-1-4/','title':"class_rw_t 和 class_ro_t 有什么区别",'content':"题目还原 class_rw_t 和 class_ro_t 有什么区别  "});index.add({'id':24,'href':'/interval/docs/ch05/tc02/5-2-4/','title':"dispatch_once 实现原理",'content':"题目还原 介绍下 dispatch_once 实现原理  "});index.add({'id':25,'href':'/interval/docs/','title':"Docs",'content':""});index.add({'id':26,'href':'/interval/docs/ch05/tc02/5-2-3/','title':"GCD API",'content':"题目还原 列出 GCD 的一些常用 api  "});index.add({'id':27,'href':'/interval/docs/ch05/tc02/5-2-2/','title':"GCD 线程与队列关系",'content':"题目还原 说出 GCD 线程与队列关系  "});index.add({'id':28,'href':'/interval/docs/ch05/tc02/5-2-1/','title':"GCD 队列",'content':"题目还原 GCD 有哪些队列，默认提供哪些队列  "});index.add({'id':29,'href':'/interval/docs/ch09/tc01/9-1-8/','title':"git diff",'content':"题目还原 如何设计一个 git diff  "});index.add({'id':30,'href':'/interval/docs/ch04/tc03/4-3-3/','title':"imageName 和 imageWithContentsOfFile",'content':"题目还原 imageName 和 imageWithContentsOfFile 的作用是什么？其区别是？  "});index.add({'id':31,'href':'/interval/docs/ch06/tc01/6-1-8/','title':"IMP, SEL, Method",'content':"题目还原 介绍下IMP, SEL, Method的区别和使用场景  "});index.add({'id':32,'href':'/interval/docs/ch04/tc01/4-1-1/','title':"iOS 事件响应链机制",'content':"题目还原 什么是 iOS 的事件响应链机制？  "});index.add({'id':33,'href':'/interval/docs/ch06/tc03/6-3-3/','title':"iOS 的内省方法",'content':"题目还原 iOS 的内省方法有哪些？内部实现原理是什么？  "});index.add({'id':34,'href':'/interval/docs/ch04/tc01/4-1-5/','title':"layoutsubviews 和 drawrect",'content':"题目还原 layoutsubviews 和 drawrect 的作用是啥？其调用时机是怎样的？  "});index.add({'id':35,'href':'/interval/docs/ch06/tc01/6-1-9/','title':"load \u0026 initialize",'content':"题目还原 load \u0026amp; initialize 方法的区别什么？在继承关系中他们有什么区别  "});index.add({'id':36,'href':'/interval/docs/ch06/tc01/6-1-2/','title':"metaclass",'content':"题目还原 介绍下 metaclass 是什么，作用是什么  "});index.add({'id':37,'href':'/interval/docs/ch06/tc03/6-3-1/','title':"Method Swizzle",'content':"题目还原 介绍下 Method Swizzle 的原理与使用注意事项  "});index.add({'id':38,'href':'/interval/docs/ch09/tc01/9-1-2/','title':"MVC, MVP, MVVM",'content':"题目还原 介绍下 MVC, MVP, MVVM  "});index.add({'id':39,'href':'/interval/docs/ch05/tc03/5-3-1/','title':"NSOperationQueue",'content':"题目还原 介绍下 NSOperationQueue, maxConcurrentOperationCount 的默认值是多少？  "});index.add({'id':40,'href':'/interval/docs/ch05/tc03/5-3-2/','title':"NSTimer, CADisplayLink, dispatch_source_t",'content':"题目还原 比较 NSTimer, CADisplayLink, dispatch_source_t 的优劣  "});index.add({'id':41,'href':'/interval/docs/ch06/tc01/6-1-1/','title':"Runtime 的内存模型",'content':"题目还原 介绍下 Runtime 的内存模型（isa、对象、类、metaclass、结构体的存储信息等）  "});index.add({'id':42,'href':'/interval/tags/','title':"Tags",'content':""});index.add({'id':43,'href':'/interval/docs/ch04/tc01/4-1-3/','title':"UI 的刷新原理",'content':"题目还原 什么是离屏渲染？  "});index.add({'id':44,'href':'/interval/docs/ch04/tc01/4-1-4/','title':"UIView 和 CALayer",'content':"题目还原 UIView 和 CALayer 的区别是什么？  "});index.add({'id':45,'href':'/interval/docs/ch06/tc02/6-2-1/','title':"weak",'content':"题目还原 weak 是如何实现的？ SideTable 的结构是什么样的？  "});index.add({'id':46,'href':'/interval/docs/ch04/tc01/4-1-2/','title':"什么是离屏渲染",'content':"题目还原 什么是离屏渲染？  "});index.add({'id':47,'href':'/interval/docs/ch04/tc01/4-1-6/','title':"什么是离屏渲染",'content':"题目还原 什么是离屏渲染？  "});index.add({'id':48,'href':'/interval/docs/ch06/tc02/6-2-2/','title':"关联对象",'content':"题目还原 关联对象是如何实现的，其内存管理如何进行  "});index.add({'id':49,'href':'/interval/docs/ch09/tc01/9-1-4/','title':"单例",'content':"题目还原 介绍下单例模式及其弊端  "});index.add({'id':50,'href':'/interval/docs/ch10/tc01/10-1-2/','title':"卡顿",'content':"题目还原 如何做卡顿优化，如何监控  "});index.add({'id':51,'href':'/interval/docs/ch05/tc01/5-1-2/','title':"同步",'content':"题目还原 iOS 中如何实现同步？  "});index.add({'id':52,'href':'/interval/docs/ch10/tc01/10-1-1/','title':"启动",'content':"题目还原 如何做启动优化，如何监控  "});index.add({'id':53,'href':'/interval/docs/ch04/tc03/4-3-1/','title':"图片解码时机与优化",'content':"题目还原 图片是什么时候解码的？如何优化？  "});index.add({'id':54,'href':'/interval/docs/ch09/tc01/9-1-1/','title':"埋点",'content':"题目还原 手动埋点、自动化埋点、可视化埋点  "});index.add({'id':55,'href':'/interval/docs/ch04/tc03/4-3-2/','title':"多个相同的图片会重复加载吗？",'content':"题目还原 多个相同的图片会重复加载吗？  "});index.add({'id':56,'href':'/interval/docs/ch06/tc03/6-3-2/','title':"属性修饰符 `atomic`",'content':"题目还原 属性修饰符 atomic 的内部实现是怎么样的?能保证线程安全吗？  "});index.add({'id':57,'href':'/interval/','title':"序章",'content':"为什么会整理这套面试题？ 其实是在公众号群里，各路朋友的呼声。毕竟关注技术的多数人是为了找到一个好工作，能够进心仪的大厂。所以希望制作一个面试题的词条收集，让大家一起参与编辑。\n很多知识的答案是不断的讨论才能得出结论，且这些结论其实都是具有时效性的，例如 Apple 的 Runtime 特性、Swift 各种语法的优雅写法等，前者会随着 Runtime 仓库的版本迭代而变化，后者则会随着 Swift 语言的版本更替而改变。\n如何参与面试题整理? 可以直接向内容仓库 interval-content 提 Pull Request 进行修改编辑申请。另外一个简单的方法，在每个词条问题页面中的左下角位置，都会有 Edit this page 的按钮，会直接打开 GitHub 编辑页面。如此可以快速发起 PR，当 @冬瓜 或者其他管理员 Review 通过后，方可合入词条。\n适用人群 iOS 方向求职应届生以及考虑机会的 iOS 工程师。\n特别感谢 感谢以下题目来源：\n 阿里、字节：一套高效的 iOS 面试题  另外，也感谢经典的《招聘一个靠谱的 iOS》仓库带来的面试题整理启发。\n贡献者 "});index.add({'id':58,'href':'/interval/docs/ch06/tc01/6-1-7/','title':"方法调用",'content':"题目还原 在方法调用的时候，方法查询-\u0026gt; 动态解析-\u0026gt; 消息转发之前做了什么  "});index.add({'id':59,'href':'/interval/docs/ch05/tc01/5-1-4/','title':"死锁",'content':"题目还原 什么情况下会发生死锁？  "});index.add({'id':60,'href':'/interval/docs/ch06/tc01/6-1-6/','title':"消息转发",'content':"题目还原 什么是消息转发，消息转发机制和其他语言的消息机制优劣对比  "});index.add({'id':61,'href':'/interval/docs/ch09/tc01/9-1-6/','title':"稳定性",'content':"题目还原 如果保证项目的稳定性  "});index.add({'id':62,'href':'/interval/docs/ch05/tc01/5-1-1/','title':"线程",'content':"题目还原 iOS 开发中有多少类型的线程？  "});index.add({'id':63,'href':'/interval/docs/ch09/tc01/9-1-9/','title':"线程池",'content':"题目还原 设计一个线程池，画出你的架构图  "});index.add({'id':64,'href':'/interval/docs/ch09/tc01/9-1-7/','title':"缓存",'content':"题目还原 设计一个图片缓存框架  "});index.add({'id':65,'href':'/interval/docs/ch10/tc01/10-1-4/','title':"网络",'content':"题目还原 如何做网络优化，如何监控  "});index.add({'id':66,'href':'/interval/docs/ch10/tc01/10-1-3/','title':"耗电",'content':"题目还原 如何做耗电优化，如何监控  "});index.add({'id':67,'href':'/interval/docs/ch09/tc01/9-1-3/','title':"设计模式",'content':"题目还原 列举常见的设计模式  "});index.add({'id':68,'href':'/interval/docs/ch09/tc01/9-1-5/','title':"路由",'content':"题目还原 常见的路由方案，以及优缺点对比  "});index.add({'id':69,'href':'/interval/docs/ch05/tc01/5-1-3/','title':"锁",'content':"题目还原 有哪些类型的线程锁，分别介绍下作用和使用场景  "});})();